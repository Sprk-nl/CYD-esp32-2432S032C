# Change the naming below, they will be the names used in Home Assistant
#
substitutions:
  device_name: cyd-v-test1
  friendly_name: CYD


esphome:
  name: $device_name
  friendly_name: $friendly_name

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "Your_HASS_KEY"

ota:
  password: "YOUR_OTA_KEY"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Cyd-V-Test1 Fallback Hotspot"
    password: "YOURS_AGAIN"

captive_portal:

# ============================================================ 
# ESPHome Display related setup
#
# Create a font to use, add and remove glyphs as needed. 
font:
  - file: 'fonts/Arimo-Regular.ttf'
    id: arimo24
    size: 24
    glyphs: "!\"%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZÅÄÖ abcdefghijklmnopqrstuvwxyzåäö"
  - file: 'fonts/Arimo-Regular.ttf'
    id: arimo96
    size: 96
    glyphs: ":0123456789"

# Create a Home Assistant blue color
color:
  - id: ha_blue
    hex: 51c0f2

# Create an ESPHome logo image
image:
  - file: "images/esphome.png"
    id: esphome_image
    type: RGB24



# Create a time sensor, this will fetch time from Home Assistant
time:
  - platform: homeassistant
    id: esptime


# ============================================================ 
# Hardware related setup
#
# Setup SPI for the display. The ESP32-2432S028R uses separate SPI buses for display and touch
spi:
  - id: tft
    clk_pin: GPIO14
    mosi_pin: GPIO13
    miso_pin: GPIO12
  - id: touch
    clk_pin: GPIO25
    mosi_pin: GPIO32
    miso_pin: GPIO39

# Setup a pin to control the backlight
output:
  - platform: ledc
    pin: GPIO27
    id: backlight_pwm
    inverted: false
  - platform: ledc
    pin: GPIO4
    id: gpio_4
    inverted: true
  - platform: ledc
    pin: GPIO16
    id: gpio_16
    inverted: true
  - platform: ledc
    pin: GPIO17
    id: gpio_17
    inverted: true

# Setup the ili9xxx platform
#
# Display is used as 240x320  3.2 inch
#
# We print date and time wth the strftime() function, see the ESPHome documentation to 
# format date and atime to your locale.
#
display:
 - platform: ili9xxx
   id: esp_display
   model: ili9342
   #model: ili9341
   spi_id: tft
   cs_pin: GPIO15
   dc_pin: GPIO2
   #invert_display: true (changed to below with ESPhome 2023.12.0)
   #invert_colors: true
   #rotation: 90
   lambda: |-
      it.fill(id(ha_blue));
      it.image(120,10, id(esphome_image));
      it.strftime(100, 100, id(arimo24), "%Y-%m-%d", id(esptime).now());
      it.strftime(40, 120, id(arimo96), "%H:%M", id(esptime).now());

light:
  - platform: rgb
    id: light_1
    name: "RGB LED"
    red: gpio_4
    green: gpio_16
    blue: gpio_17

  - platform: monochromatic
    output: backlight_pwm
    name: Display Backlight
    id: backlight
    restore_mode: ALWAYS_ON    

sensor:
  - platform: adc
    pin: GPIO34
    name: "Light detection"
    update_interval: 60s


# Set up the xpt2046 touch platform
touchscreen:
  platform: xpt2046
  spi_id: touch
  cs_pin: GPIO33
  interrupt_pin: GPIO36
  update_interval: 50ms
  threshold: 400
  calibration_x_min: 3860
  calibration_x_max: 280
  calibration_y_min: 340
  calibration_y_max: 3860
  transform:
    swap_xy: false


# Setup two binary sensors for the two areas for touch
binary_sensor:
  - platform: touchscreen
    name: Button A
    x_min: 20
    x_max: 140
    y_min: 60
    y_max: 180

  - platform: touchscreen
    name: Button B
    x_min: 180
    x_max: 300
    y_min: 60
    y_max: 180
